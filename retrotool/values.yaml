# Hosting type, supported: "gke" (Google Kubernetes Engine), "other"
type: "other"

# Autoscaling settings
replicas:
  min: 1
  max: 5
  limits:
    # CPU utilization limit (%) after which K8s creates another pod
    cpu: 85
    # Memory utilization limit (%) after which K8s creates another pod
    memory: 90

# App pod resources
resources:
  limits:
    cpu: 1000m
    memory: 1536Mi
  requests:
    cpu: 700m
    memory: 1024Mi

# Database settings
database:
  # Type of database: 
  # * replicaset (using mongodb-replicaset chart)
  # * operator (using MongoDB Kubernetes operator)
  # * custom (custom URI)
  type: "replicaset"
  # Settings for operator
  operator:
    enabled: false
    # Custom password for DB
    password: ~
    version: "4.4.7"
    replicas: 3
    arbiters: 0
    replicaSetName: rs0
    readPreference: ~
    maxStalenessSeconds: ~
    storage:
      size: 10Gi
      className: "standard"
    resources: {}
  # Settings for custom DB
  custom:
    host: ~
    port: 27017
    database: "retrotool"
    replicaset: "rs0"
    readPreference: ~
    maxStalenessSeconds: ~

# Default MongoDB replicaset chart settings
mongodb-replicaset:
  enabled: true
  replicas: 3
  port: 27017
  database: "retrotool"
  replicaSetName: "rs0"
  readPreference: ~
  maxStalenessSeconds: ~
  image:
    tag: 4.2
  resources:
    limits:
      cpu: 1000m
      memory: 1536Mi
    requests:
      cpu: 500m
      memory: 1024Mi
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        # Affinity to schedule db replicas on different nodes if possible
        - weight: 10
          podAffinityTerm:
            topologyKey: "kubernetes.io/hostname"
            labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                    - "mongodb-replicaset"

# Default Redis configuration (for Oplog)
redis:
  architecture: replication
  enabled: false
  sentinel:
    enabled: false
  replica:
    replicaCount: 2
  auth:
    enabled: false
    sentinel: false

# Setup NFS server for serving backgrounds
nfs:
  enabled: false
  size: 50GiB
  storageClass: "standard"

ingress:
  # Additional annotations for Ingress
  annotations: {}
  # IngressClass to use for this particular release, by default use default ingress class
  ingressClassName: ~

service:
  # Additional annotations for Service
  annotations: {}

deployment:
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        # Affinity to schedule web servers on different nodes if possible
        - weight: 10
          podAffinityTerm:
            topologyKey: "kubernetes.io/hostname"
            labelSelector:
              matchExpressions:
                - key: retrotool
                  operator: In
                  values:
                    - "web-server"
  containers:
    app:
      # Additional env values for app container
      env: []
  topologySpreadConstraints: []

# Let's Encrypt certificate settings
certificate:
  enabled: true
  email: "app@example.com"
  # For GKE you can set your SSL policy for GCP Load Balancers
  sslPolicy: ~
  issuer:
    name: "letsencrypt-prod"
    kind: ClusterIssuer

# Google CDN config, works when type is "gke"
cdn:
  enabled: false
  policy: {}

# Velero backup support
backup:
  enabled: false
  # Hourly backups stored for 24 hours
  hourly: false
  # Daily backups stored for 7 days
  daily: false
  # Name of storage location for backups and volumes
  storageLocation: default

app:
  image: "retrotool:1.0.0"
  hosts:
    - "retrotool.example.com"
  protocol: "https"
  imagePullPolicy: Always
  mail:
    # SMTP URL required to allow sending emails
    url: smtp://localhost:587
  redisOplog: {} # Override Redis Oplog settings
  settings:
    # Internal app settings
    public:
      disconnectTimeSec: 3600
      # Google Analytics settings
      analytics:
        enabled: false
        gtm_id: ~
        gtm_auth: ~
        gtm_env: ~
      # Contact us recipient email
      email:
        contact: "contact@example.com"
        no_reply: "no-reply@example.com"
      # Intercom settings
      intercom:
        enabled: false
        app_id: ~
      features: {}
      email_templates: {}
      # Rollbar settings
      rollbar:
        enabled: false
        accessToken: ~
        environment: "local"
